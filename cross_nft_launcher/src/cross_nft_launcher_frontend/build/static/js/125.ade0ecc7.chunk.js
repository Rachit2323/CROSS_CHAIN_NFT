"use strict";(self.webpackChunkcross_nft_launcher_frontend=self.webpackChunkcross_nft_launcher_frontend||[]).push([[125],{125:(e,t,r)=>{r.r(t),r.d(t,{canisterId:()=>n,createActor:()=>_,cross_nft_launcher_backend:()=>i,idlFactory:()=>o});var a=r(30),c=r(173);const o=e=>{let{IDL:t}=e;const r=t.Rec(),a=t.Rec(),c=t.Record({owner:t.Principal,subaccount:t.Opt(t.Vec(t.Nat8))}),o=(t.Record({supply_cap:t.Opt(t.Nat),tx_window:t.Opt(t.Nat64),default_take_value:t.Opt(t.Nat),minting_account:t.Opt(c),logo:t.Opt(t.Text),permitted_drift:t.Opt(t.Nat64),name:t.Text,description:t.Opt(t.Text),max_take_value:t.Opt(t.Nat),max_update_batch_size:t.Opt(t.Nat16),max_query_batch_size:t.Opt(t.Nat16),max_memo_size:t.Opt(t.Nat32),symbol:t.Text}),t.Variant({Ok:t.Text,Err:t.Text})),n=t.Record({token_id:t.Nat,memo:t.Opt(t.Vec(t.Nat8)),from_subaccount:t.Opt(t.Vec(t.Nat8)),created_at_time:t.Opt(t.Nat64),expires_at:t.Opt(t.Nat64),spender:c}),_=t.Variant({GenericError:t.Record({message:t.Text,error_code:t.Nat}),NonExistingTokenId:t.Null,Unauthorized:t.Null,CreatedInFuture:t.Record({ledger_time:t.Nat64}),TooOld:t.Null}),i=t.Variant({Ok:t.Nat,Err:_}),u=t.Record({memo:t.Opt(t.Vec(t.Nat8)),from_subaccount:t.Opt(t.Vec(t.Nat8)),created_at_time:t.Nat64,expires_at:t.Opt(t.Nat64),spender:c}),p=t.Record({approval_info:u}),d=t.Variant({GenericError:t.Record({message:t.Text,error_code:t.Nat}),InvalidSpender:t.Null,CreatedInFuture:t.Record({ledger_time:t.Nat64}),GenericBatchError:t.Record({message:t.Text,error_code:t.Nat}),TooOld:t.Null}),N=t.Variant({Ok:t.Nat,Err:d}),l=t.Record({token_id:t.Nat,approval_info:u}),s=t.Variant({GenericError:t.Record({message:t.Text,error_code:t.Nat}),InvalidSpender:t.Null,NonExistingTokenId:t.Null,Unauthorized:t.Null,CreatedInFuture:t.Record({ledger_time:t.Nat64}),GenericBatchError:t.Record({message:t.Text,error_code:t.Nat}),TooOld:t.Null}),O=t.Variant({Ok:t.Nat,Err:s}),m=t.Record({token_id:t.Nat,approval_info:u}),T=t.Record({memo:t.Opt(t.Vec(t.Nat8)),from_subaccount:t.Opt(t.Vec(t.Nat8)),created_at_time:t.Opt(t.Nat64),spender:t.Opt(c)}),V=t.Variant({GenericError:t.Record({message:t.Text,error_code:t.Nat}),CreatedInFuture:t.Record({ledger_time:t.Nat64}),ApprovalDoesNotExist:t.Null,GenericBatchError:t.Record({message:t.Text,error_code:t.Nat}),TooOld:t.Null}),x=t.Variant({Ok:t.Nat,Err:V}),F=t.Record({token_id:t.Nat,memo:t.Opt(t.Vec(t.Nat8)),from_subaccount:t.Opt(t.Vec(t.Nat8)),created_at_time:t.Opt(t.Nat64),spender:t.Opt(c)}),R=t.Variant({GenericError:t.Record({message:t.Text,error_code:t.Nat}),NonExistingTokenId:t.Null,Unauthorized:t.Null,CreatedInFuture:t.Record({ledger_time:t.Nat64}),ApprovalDoesNotExist:t.Null,GenericBatchError:t.Record({message:t.Text,error_code:t.Nat}),TooOld:t.Null}),E=t.Variant({Ok:t.Nat,Err:R}),k=t.Record({to:c,spender_subaccount:t.Opt(t.Vec(t.Nat8)),token_id:t.Nat,from:c,memo:t.Opt(t.Vec(t.Nat8)),created_at_time:t.Opt(t.Nat64)}),g=t.Variant({GenericError:t.Record({message:t.Text,error_code:t.Nat}),Duplicate:t.Record({duplicate_of:t.Nat}),NonExistingTokenId:t.Null,Unauthorized:t.Null,CreatedInFuture:t.Record({ledger_time:t.Nat64}),InvalidRecipient:t.Null,GenericBatchError:t.Record({message:t.Text,error_code:t.Nat}),TooOld:t.Null}),y=t.Variant({Ok:t.Nat,Err:g}),f=t.Record({to:c,spender_subaccount:t.Opt(t.Vec(t.Nat8)),token_id:t.Nat,from:c,memo:t.Opt(t.Vec(t.Nat8)),created_at_time:t.Opt(t.Nat64)}),v=t.Variant({Approve:t.Record({token_id:t.Nat,from:c,spender:c}),Burn:t.Record({token_id:t.Nat,from:c}),Mint:t.Record({to:c,token_id:t.Nat}),Transfer:t.Record({to:c,token_id:t.Nat,from:c})}),q=t.Record({transaction_type:v,memo:t.Opt(t.Vec(t.Nat8)),timestamp:t.Nat64,index:t.Nat});a.fill(t.Vec(t.Tuple(t.Text,t.Variant({Int:t.Int,Map:a,Nat:t.Nat,Blob:t.Vec(t.Nat8),Text:t.Text,Array:t.Vec(r)})))),r.fill(t.Variant({Int:t.Int,Map:a,Nat:t.Nat,Blob:t.Vec(t.Nat8),Text:t.Text,Array:t.Vec(r)}));const I=t.Variant({Int:t.Int,Nat:t.Nat,Blob:t.Vec(t.Nat8),Text:t.Text}),h=t.Record({to:c,token_id:t.Nat,metadata:t.Vec(t.Tuple(t.Text,I)),memo:t.Opt(t.Vec(t.Nat8)),created_at_time:t.Opt(t.Nat64)}),C=t.Variant({Ok:t.Nat,Err:t.Text}),A=t.Record({to:c,token_id:t.Nat,memo:t.Opt(t.Vec(t.Nat8)),from_subaccount:t.Opt(t.Vec(t.Nat8)),created_at_time:t.Opt(t.Nat64)}),b=t.Variant({Ok:t.Null,Err:t.Text});return t.Service({call_mint_nft_release_sepolia:t.Func([t.Text,t.Text,t.Text,t.Text,t.Nat64],[o],[]),evm_monitor:t.Func([],[],[]),generate_key_pair_evm:t.Func([],[o],[]),get_minting_account:t.Func([],[t.Text,t.Text],["query"]),greet:t.Func([t.Text],[t.Text],["query"]),holesky_txn:t.Func([],[o],[]),icrc37_approve:t.Func([t.Vec(n)],[t.Vec(i)],[]),icrc37_approve_collection:t.Func([t.Vec(p)],[t.Vec(t.Opt(N))],[]),icrc37_approve_tokens:t.Func([t.Vec(l)],[t.Vec(t.Opt(O))],[]),icrc37_get_collection_approvals:t.Func([c,t.Opt(u),t.Opt(t.Nat)],[t.Vec(u)],["query"]),icrc37_get_token_approvals:t.Func([t.Nat,t.Opt(m),t.Opt(t.Nat)],[t.Vec(m)],["query"]),icrc37_is_approved:t.Func([t.Vec(t.Tuple(t.Nat,c,c))],[t.Vec(t.Bool)],["query"]),icrc37_max_approvals_per_token_or_collection:t.Func([],[t.Opt(t.Nat)],["query"]),icrc37_max_revoke_approvals:t.Func([],[t.Opt(t.Nat)],["query"]),icrc37_revoke_collection_approvals:t.Func([t.Vec(T)],[t.Vec(t.Opt(x))],[]),icrc37_revoke_token_approvals:t.Func([t.Vec(F)],[t.Vec(t.Opt(E))],[]),icrc37_transfer_from:t.Func([t.Vec(k)],[t.Vec(y)],[]),icrc37_transfer_from_standard:t.Func([t.Vec(f)],[t.Vec(t.Opt(y))],[]),icrc3_get_blocks:t.Func([t.Vec(t.Tuple(t.Nat,t.Nat))],[t.Vec(t.Vec(q))],["query"]),icrc3_get_tip_certificate:t.Func([],[t.Opt(t.Vec(t.Nat8))],["query"]),icrc7_atomic_batch_transfers:t.Func([],[t.Opt(t.Bool)],["query"]),icrc7_balance_of:t.Func([t.Vec(c)],[t.Vec(t.Nat)],["query"]),icrc7_collection_metadata:t.Func([],[t.Vec(t.Tuple(t.Text,r))],["query"]),icrc7_default_take_value:t.Func([],[t.Opt(t.Nat)],["query"]),icrc7_description:t.Func([],[t.Opt(t.Text)],["query"]),icrc7_logo:t.Func([],[t.Opt(t.Text)],["query"]),icrc7_max_memo_size:t.Func([],[t.Opt(t.Nat32)],["query"]),icrc7_max_query_batch_size:t.Func([],[t.Opt(t.Nat16)],["query"]),icrc7_max_take_value:t.Func([],[t.Opt(t.Nat)],["query"]),icrc7_max_update_batch_size:t.Func([],[t.Opt(t.Nat16)],["query"]),icrc7_mint:t.Func([t.Vec(h)],[t.Vec(C)],[]),icrc7_name:t.Func([],[t.Text],["query"]),icrc7_owner_of:t.Func([t.Vec(t.Nat)],[t.Vec(t.Opt(c))],["query"]),icrc7_permitted_drift:t.Func([],[t.Opt(t.Nat)],["query"]),icrc7_supply_cap:t.Func([],[t.Opt(t.Nat)],["query"]),icrc7_supported_standards:t.Func([],[t.Vec(t.Tuple(t.Text,t.Text))],["query"]),icrc7_symbol:t.Func([],[t.Text],["query"]),icrc7_token_metadata:t.Func([t.Vec(t.Nat)],[t.Vec(t.Opt(t.Vec(t.Tuple(t.Text,r))))],["query"]),icrc7_tokens:t.Func([t.Opt(t.Nat),t.Opt(t.Nat)],[t.Vec(t.Nat)],["query"]),icrc7_tokens_of:t.Func([c,t.Opt(t.Nat),t.Opt(t.Nat)],[t.Vec(t.Nat)],["query"]),icrc7_total_supply:t.Func([],[t.Nat],["query"]),icrc7_transfer:t.Func([t.Vec(A)],[t.Vec(y)],[]),icrc7_tx_window:t.Func([],[t.Opt(t.Nat)],["query"]),initialize_if_needed:t.Func([t.Principal],[t.Text],[]),monitor_evm_nft:t.Func([],[],[]),monitor_evm_nft_reverse:t.Func([],[],[]),sepolia_txn:t.Func([],[o],[]),set_collection_metadata:t.Func([],[t.Text],[]),set_minting_account:t.Func([c],[b],[]),set_minting_account_manual:t.Func([t.Text],[t.Text],[]),update_block_number:t.Func([t.Nat64],[o],[])})},n={NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0,REACT_APP_CANISTER_ID:"lqy7q-dh777-77777-aaaaq-cai",REACT_APP_FRONTEND_CANISTER_ID:"lz3um-vp777-77777-aaaba-cai",REACT_APP_ICP_NETWORK:"http://127.0.0.1:4943"}.CANISTER_ID_CROSS_NFT_LAUNCHER_BACKEND,_=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const r=t.agent||new a.qB({...t.agentOptions});return t.agent&&t.agentOptions&&console.warn("Detected both agent and agentOptions passed to createActor. Ignoring agentOptions and proceeding with the provided agent."),"ic"!=={NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0,REACT_APP_CANISTER_ID:"lqy7q-dh777-77777-aaaaq-cai",REACT_APP_FRONTEND_CANISTER_ID:"lz3um-vp777-77777-aaaba-cai",REACT_APP_ICP_NETWORK:"http://127.0.0.1:4943"}.DFX_NETWORK&&r.fetchRootKey().catch(e=>{console.warn("Unable to fetch root key. Check to ensure that your local replica is running"),console.error(e)}),c.Ag.createActor(o,{agent:r,canisterId:e,...t.actorOptions})},i=n?_(n):void 0}}]);
//# sourceMappingURL=125.ade0ecc7.chunk.js.map