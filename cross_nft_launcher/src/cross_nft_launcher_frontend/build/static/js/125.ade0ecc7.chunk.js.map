{"version":3,"file":"static/js/125.ade0ecc7.chunk.js","mappings":"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","sources":["declarations/cross_nft_launcher_backend/cross_nft_launcher_backend.did.js","declarations/cross_nft_launcher_backend/index.js"],"sourcesContent":["export const idlFactory = ({ IDL }) => {\n  const Value = IDL.Rec();\n  const Vec = IDL.Rec();\n  const Account = IDL.Record({\n    'owner' : IDL.Principal,\n    'subaccount' : IDL.Opt(IDL.Vec(IDL.Nat8)),\n  });\n  const InitArgs = IDL.Record({\n    'supply_cap' : IDL.Opt(IDL.Nat),\n    'tx_window' : IDL.Opt(IDL.Nat64),\n    'default_take_value' : IDL.Opt(IDL.Nat),\n    'minting_account' : IDL.Opt(Account),\n    'logo' : IDL.Opt(IDL.Text),\n    'permitted_drift' : IDL.Opt(IDL.Nat64),\n    'name' : IDL.Text,\n    'description' : IDL.Opt(IDL.Text),\n    'max_take_value' : IDL.Opt(IDL.Nat),\n    'max_update_batch_size' : IDL.Opt(IDL.Nat16),\n    'max_query_batch_size' : IDL.Opt(IDL.Nat16),\n    'max_memo_size' : IDL.Opt(IDL.Nat32),\n    'symbol' : IDL.Text,\n  });\n  const Result = IDL.Variant({ 'Ok' : IDL.Text, 'Err' : IDL.Text });\n  const ApprovalArgs = IDL.Record({\n    'token_id' : IDL.Nat,\n    'memo' : IDL.Opt(IDL.Vec(IDL.Nat8)),\n    'from_subaccount' : IDL.Opt(IDL.Vec(IDL.Nat8)),\n    'created_at_time' : IDL.Opt(IDL.Nat64),\n    'expires_at' : IDL.Opt(IDL.Nat64),\n    'spender' : Account,\n  });\n  const ApprovalError = IDL.Variant({\n    'GenericError' : IDL.Record({\n      'message' : IDL.Text,\n      'error_code' : IDL.Nat,\n    }),\n    'NonExistingTokenId' : IDL.Null,\n    'Unauthorized' : IDL.Null,\n    'CreatedInFuture' : IDL.Record({ 'ledger_time' : IDL.Nat64 }),\n    'TooOld' : IDL.Null,\n  });\n  const Result_1 = IDL.Variant({ 'Ok' : IDL.Nat, 'Err' : ApprovalError });\n  const ApprovalInfo = IDL.Record({\n    'memo' : IDL.Opt(IDL.Vec(IDL.Nat8)),\n    'from_subaccount' : IDL.Opt(IDL.Vec(IDL.Nat8)),\n    'created_at_time' : IDL.Nat64,\n    'expires_at' : IDL.Opt(IDL.Nat64),\n    'spender' : Account,\n  });\n  const ApproveCollectionArg = IDL.Record({ 'approval_info' : ApprovalInfo });\n  const ApproveCollectionError = IDL.Variant({\n    'GenericError' : IDL.Record({\n      'message' : IDL.Text,\n      'error_code' : IDL.Nat,\n    }),\n    'InvalidSpender' : IDL.Null,\n    'CreatedInFuture' : IDL.Record({ 'ledger_time' : IDL.Nat64 }),\n    'GenericBatchError' : IDL.Record({\n      'message' : IDL.Text,\n      'error_code' : IDL.Nat,\n    }),\n    'TooOld' : IDL.Null,\n  });\n  const Result_2 = IDL.Variant({\n    'Ok' : IDL.Nat,\n    'Err' : ApproveCollectionError,\n  });\n  const ApproveTokenArg = IDL.Record({\n    'token_id' : IDL.Nat,\n    'approval_info' : ApprovalInfo,\n  });\n  const ApproveTokenError = IDL.Variant({\n    'GenericError' : IDL.Record({\n      'message' : IDL.Text,\n      'error_code' : IDL.Nat,\n    }),\n    'InvalidSpender' : IDL.Null,\n    'NonExistingTokenId' : IDL.Null,\n    'Unauthorized' : IDL.Null,\n    'CreatedInFuture' : IDL.Record({ 'ledger_time' : IDL.Nat64 }),\n    'GenericBatchError' : IDL.Record({\n      'message' : IDL.Text,\n      'error_code' : IDL.Nat,\n    }),\n    'TooOld' : IDL.Null,\n  });\n  const Result_3 = IDL.Variant({ 'Ok' : IDL.Nat, 'Err' : ApproveTokenError });\n  const TokenApproval = IDL.Record({\n    'token_id' : IDL.Nat,\n    'approval_info' : ApprovalInfo,\n  });\n  const RevokeCollectionApprovalArg = IDL.Record({\n    'memo' : IDL.Opt(IDL.Vec(IDL.Nat8)),\n    'from_subaccount' : IDL.Opt(IDL.Vec(IDL.Nat8)),\n    'created_at_time' : IDL.Opt(IDL.Nat64),\n    'spender' : IDL.Opt(Account),\n  });\n  const RevokeCollectionApprovalError = IDL.Variant({\n    'GenericError' : IDL.Record({\n      'message' : IDL.Text,\n      'error_code' : IDL.Nat,\n    }),\n    'CreatedInFuture' : IDL.Record({ 'ledger_time' : IDL.Nat64 }),\n    'ApprovalDoesNotExist' : IDL.Null,\n    'GenericBatchError' : IDL.Record({\n      'message' : IDL.Text,\n      'error_code' : IDL.Nat,\n    }),\n    'TooOld' : IDL.Null,\n  });\n  const Result_4 = IDL.Variant({\n    'Ok' : IDL.Nat,\n    'Err' : RevokeCollectionApprovalError,\n  });\n  const RevokeTokenApprovalArg = IDL.Record({\n    'token_id' : IDL.Nat,\n    'memo' : IDL.Opt(IDL.Vec(IDL.Nat8)),\n    'from_subaccount' : IDL.Opt(IDL.Vec(IDL.Nat8)),\n    'created_at_time' : IDL.Opt(IDL.Nat64),\n    'spender' : IDL.Opt(Account),\n  });\n  const RevokeTokenApprovalError = IDL.Variant({\n    'GenericError' : IDL.Record({\n      'message' : IDL.Text,\n      'error_code' : IDL.Nat,\n    }),\n    'NonExistingTokenId' : IDL.Null,\n    'Unauthorized' : IDL.Null,\n    'CreatedInFuture' : IDL.Record({ 'ledger_time' : IDL.Nat64 }),\n    'ApprovalDoesNotExist' : IDL.Null,\n    'GenericBatchError' : IDL.Record({\n      'message' : IDL.Text,\n      'error_code' : IDL.Nat,\n    }),\n    'TooOld' : IDL.Null,\n  });\n  const Result_5 = IDL.Variant({\n    'Ok' : IDL.Nat,\n    'Err' : RevokeTokenApprovalError,\n  });\n  const TransferFromArgs = IDL.Record({\n    'to' : Account,\n    'spender_subaccount' : IDL.Opt(IDL.Vec(IDL.Nat8)),\n    'token_id' : IDL.Nat,\n    'from' : Account,\n    'memo' : IDL.Opt(IDL.Vec(IDL.Nat8)),\n    'created_at_time' : IDL.Opt(IDL.Nat64),\n  });\n  const TransferError = IDL.Variant({\n    'GenericError' : IDL.Record({\n      'message' : IDL.Text,\n      'error_code' : IDL.Nat,\n    }),\n    'Duplicate' : IDL.Record({ 'duplicate_of' : IDL.Nat }),\n    'NonExistingTokenId' : IDL.Null,\n    'Unauthorized' : IDL.Null,\n    'CreatedInFuture' : IDL.Record({ 'ledger_time' : IDL.Nat64 }),\n    'InvalidRecipient' : IDL.Null,\n    'GenericBatchError' : IDL.Record({\n      'message' : IDL.Text,\n      'error_code' : IDL.Nat,\n    }),\n    'TooOld' : IDL.Null,\n  });\n  const Result_6 = IDL.Variant({ 'Ok' : IDL.Nat, 'Err' : TransferError });\n  const TransferFromArg = IDL.Record({\n    'to' : Account,\n    'spender_subaccount' : IDL.Opt(IDL.Vec(IDL.Nat8)),\n    'token_id' : IDL.Nat,\n    'from' : Account,\n    'memo' : IDL.Opt(IDL.Vec(IDL.Nat8)),\n    'created_at_time' : IDL.Opt(IDL.Nat64),\n  });\n  const TransactionType = IDL.Variant({\n    'Approve' : IDL.Record({\n      'token_id' : IDL.Nat,\n      'from' : Account,\n      'spender' : Account,\n    }),\n    'Burn' : IDL.Record({ 'token_id' : IDL.Nat, 'from' : Account }),\n    'Mint' : IDL.Record({ 'to' : Account, 'token_id' : IDL.Nat }),\n    'Transfer' : IDL.Record({\n      'to' : Account,\n      'token_id' : IDL.Nat,\n      'from' : Account,\n    }),\n  });\n  const Transaction = IDL.Record({\n    'transaction_type' : TransactionType,\n    'memo' : IDL.Opt(IDL.Vec(IDL.Nat8)),\n    'timestamp' : IDL.Nat64,\n    'index' : IDL.Nat,\n  });\n  Vec.fill(\n    IDL.Vec(\n      IDL.Tuple(\n        IDL.Text,\n        IDL.Variant({\n          'Int' : IDL.Int,\n          'Map' : Vec,\n          'Nat' : IDL.Nat,\n          'Blob' : IDL.Vec(IDL.Nat8),\n          'Text' : IDL.Text,\n          'Array' : IDL.Vec(Value),\n        }),\n      )\n    )\n  );\n  Value.fill(\n    IDL.Variant({\n      'Int' : IDL.Int,\n      'Map' : Vec,\n      'Nat' : IDL.Nat,\n      'Blob' : IDL.Vec(IDL.Nat8),\n      'Text' : IDL.Text,\n      'Array' : IDL.Vec(Value),\n    })\n  );\n  const MetadataValue = IDL.Variant({\n    'Int' : IDL.Int,\n    'Nat' : IDL.Nat,\n    'Blob' : IDL.Vec(IDL.Nat8),\n    'Text' : IDL.Text,\n  });\n  const MintArgs = IDL.Record({\n    'to' : Account,\n    'token_id' : IDL.Nat,\n    'metadata' : IDL.Vec(IDL.Tuple(IDL.Text, MetadataValue)),\n    'memo' : IDL.Opt(IDL.Vec(IDL.Nat8)),\n    'created_at_time' : IDL.Opt(IDL.Nat64),\n  });\n  const Result_7 = IDL.Variant({ 'Ok' : IDL.Nat, 'Err' : IDL.Text });\n  const TransferArgs = IDL.Record({\n    'to' : Account,\n    'token_id' : IDL.Nat,\n    'memo' : IDL.Opt(IDL.Vec(IDL.Nat8)),\n    'from_subaccount' : IDL.Opt(IDL.Vec(IDL.Nat8)),\n    'created_at_time' : IDL.Opt(IDL.Nat64),\n  });\n  const Result_8 = IDL.Variant({ 'Ok' : IDL.Null, 'Err' : IDL.Text });\n  return IDL.Service({\n    'call_mint_nft_release_sepolia' : IDL.Func(\n        [IDL.Text, IDL.Text, IDL.Text, IDL.Text, IDL.Nat64],\n        [Result],\n        [],\n      ),\n    'evm_monitor' : IDL.Func([], [], []),\n    'generate_key_pair_evm' : IDL.Func([], [Result], []),\n    'get_minting_account' : IDL.Func([], [IDL.Text, IDL.Text], ['query']),\n    'greet' : IDL.Func([IDL.Text], [IDL.Text], ['query']),\n    'holesky_txn' : IDL.Func([], [Result], []),\n    'icrc37_approve' : IDL.Func(\n        [IDL.Vec(ApprovalArgs)],\n        [IDL.Vec(Result_1)],\n        [],\n      ),\n    'icrc37_approve_collection' : IDL.Func(\n        [IDL.Vec(ApproveCollectionArg)],\n        [IDL.Vec(IDL.Opt(Result_2))],\n        [],\n      ),\n    'icrc37_approve_tokens' : IDL.Func(\n        [IDL.Vec(ApproveTokenArg)],\n        [IDL.Vec(IDL.Opt(Result_3))],\n        [],\n      ),\n    'icrc37_get_collection_approvals' : IDL.Func(\n        [Account, IDL.Opt(ApprovalInfo), IDL.Opt(IDL.Nat)],\n        [IDL.Vec(ApprovalInfo)],\n        ['query'],\n      ),\n    'icrc37_get_token_approvals' : IDL.Func(\n        [IDL.Nat, IDL.Opt(TokenApproval), IDL.Opt(IDL.Nat)],\n        [IDL.Vec(TokenApproval)],\n        ['query'],\n      ),\n    'icrc37_is_approved' : IDL.Func(\n        [IDL.Vec(IDL.Tuple(IDL.Nat, Account, Account))],\n        [IDL.Vec(IDL.Bool)],\n        ['query'],\n      ),\n    'icrc37_max_approvals_per_token_or_collection' : IDL.Func(\n        [],\n        [IDL.Opt(IDL.Nat)],\n        ['query'],\n      ),\n    'icrc37_max_revoke_approvals' : IDL.Func([], [IDL.Opt(IDL.Nat)], ['query']),\n    'icrc37_revoke_collection_approvals' : IDL.Func(\n        [IDL.Vec(RevokeCollectionApprovalArg)],\n        [IDL.Vec(IDL.Opt(Result_4))],\n        [],\n      ),\n    'icrc37_revoke_token_approvals' : IDL.Func(\n        [IDL.Vec(RevokeTokenApprovalArg)],\n        [IDL.Vec(IDL.Opt(Result_5))],\n        [],\n      ),\n    'icrc37_transfer_from' : IDL.Func(\n        [IDL.Vec(TransferFromArgs)],\n        [IDL.Vec(Result_6)],\n        [],\n      ),\n    'icrc37_transfer_from_standard' : IDL.Func(\n        [IDL.Vec(TransferFromArg)],\n        [IDL.Vec(IDL.Opt(Result_6))],\n        [],\n      ),\n    'icrc3_get_blocks' : IDL.Func(\n        [IDL.Vec(IDL.Tuple(IDL.Nat, IDL.Nat))],\n        [IDL.Vec(IDL.Vec(Transaction))],\n        ['query'],\n      ),\n    'icrc3_get_tip_certificate' : IDL.Func(\n        [],\n        [IDL.Opt(IDL.Vec(IDL.Nat8))],\n        ['query'],\n      ),\n    'icrc7_atomic_batch_transfers' : IDL.Func(\n        [],\n        [IDL.Opt(IDL.Bool)],\n        ['query'],\n      ),\n    'icrc7_balance_of' : IDL.Func(\n        [IDL.Vec(Account)],\n        [IDL.Vec(IDL.Nat)],\n        ['query'],\n      ),\n    'icrc7_collection_metadata' : IDL.Func(\n        [],\n        [IDL.Vec(IDL.Tuple(IDL.Text, Value))],\n        ['query'],\n      ),\n    'icrc7_default_take_value' : IDL.Func([], [IDL.Opt(IDL.Nat)], ['query']),\n    'icrc7_description' : IDL.Func([], [IDL.Opt(IDL.Text)], ['query']),\n    'icrc7_logo' : IDL.Func([], [IDL.Opt(IDL.Text)], ['query']),\n    'icrc7_max_memo_size' : IDL.Func([], [IDL.Opt(IDL.Nat32)], ['query']),\n    'icrc7_max_query_batch_size' : IDL.Func(\n        [],\n        [IDL.Opt(IDL.Nat16)],\n        ['query'],\n      ),\n    'icrc7_max_take_value' : IDL.Func([], [IDL.Opt(IDL.Nat)], ['query']),\n    'icrc7_max_update_batch_size' : IDL.Func(\n        [],\n        [IDL.Opt(IDL.Nat16)],\n        ['query'],\n      ),\n    'icrc7_mint' : IDL.Func([IDL.Vec(MintArgs)], [IDL.Vec(Result_7)], []),\n    'icrc7_name' : IDL.Func([], [IDL.Text], ['query']),\n    'icrc7_owner_of' : IDL.Func(\n        [IDL.Vec(IDL.Nat)],\n        [IDL.Vec(IDL.Opt(Account))],\n        ['query'],\n      ),\n    'icrc7_permitted_drift' : IDL.Func([], [IDL.Opt(IDL.Nat)], ['query']),\n    'icrc7_supply_cap' : IDL.Func([], [IDL.Opt(IDL.Nat)], ['query']),\n    'icrc7_supported_standards' : IDL.Func(\n        [],\n        [IDL.Vec(IDL.Tuple(IDL.Text, IDL.Text))],\n        ['query'],\n      ),\n    'icrc7_symbol' : IDL.Func([], [IDL.Text], ['query']),\n    'icrc7_token_metadata' : IDL.Func(\n        [IDL.Vec(IDL.Nat)],\n        [IDL.Vec(IDL.Opt(IDL.Vec(IDL.Tuple(IDL.Text, Value))))],\n        ['query'],\n      ),\n    'icrc7_tokens' : IDL.Func(\n        [IDL.Opt(IDL.Nat), IDL.Opt(IDL.Nat)],\n        [IDL.Vec(IDL.Nat)],\n        ['query'],\n      ),\n    'icrc7_tokens_of' : IDL.Func(\n        [Account, IDL.Opt(IDL.Nat), IDL.Opt(IDL.Nat)],\n        [IDL.Vec(IDL.Nat)],\n        ['query'],\n      ),\n    'icrc7_total_supply' : IDL.Func([], [IDL.Nat], ['query']),\n    'icrc7_transfer' : IDL.Func(\n        [IDL.Vec(TransferArgs)],\n        [IDL.Vec(Result_6)],\n        [],\n      ),\n    'icrc7_tx_window' : IDL.Func([], [IDL.Opt(IDL.Nat)], ['query']),\n    'initialize_if_needed' : IDL.Func([IDL.Principal], [IDL.Text], []),\n    'monitor_evm_nft' : IDL.Func([], [], []),\n    'monitor_evm_nft_reverse' : IDL.Func([], [], []),\n    'sepolia_txn' : IDL.Func([], [Result], []),\n    'set_collection_metadata' : IDL.Func([], [IDL.Text], []),\n    'set_minting_account' : IDL.Func([Account], [Result_8], []),\n    'set_minting_account_manual' : IDL.Func([IDL.Text], [IDL.Text], []),\n    'update_block_number' : IDL.Func([IDL.Nat64], [Result], []),\n  });\n};\nexport const init = ({ IDL }) => {\n  const Account = IDL.Record({\n    'owner' : IDL.Principal,\n    'subaccount' : IDL.Opt(IDL.Vec(IDL.Nat8)),\n  });\n  const InitArgs = IDL.Record({\n    'supply_cap' : IDL.Opt(IDL.Nat),\n    'tx_window' : IDL.Opt(IDL.Nat64),\n    'default_take_value' : IDL.Opt(IDL.Nat),\n    'minting_account' : IDL.Opt(Account),\n    'logo' : IDL.Opt(IDL.Text),\n    'permitted_drift' : IDL.Opt(IDL.Nat64),\n    'name' : IDL.Text,\n    'description' : IDL.Opt(IDL.Text),\n    'max_take_value' : IDL.Opt(IDL.Nat),\n    'max_update_batch_size' : IDL.Opt(IDL.Nat16),\n    'max_query_batch_size' : IDL.Opt(IDL.Nat16),\n    'max_memo_size' : IDL.Opt(IDL.Nat32),\n    'symbol' : IDL.Text,\n  });\n  return [IDL.Opt(InitArgs)];\n};\n","import { Actor, HttpAgent } from \"@dfinity/agent\";\n\n// Imports and re-exports candid interface\nimport { idlFactory } from \"./cross_nft_launcher_backend.did.js\";\nexport { idlFactory } from \"./cross_nft_launcher_backend.did.js\";\n\n/* CANISTER_ID is replaced by webpack based on node environment\n * Note: canister environment variable will be standardized as\n * process.env.CANISTER_ID_<CANISTER_NAME_UPPERCASE>\n * beginning in dfx 0.15.0\n */\nexport const canisterId =\n  process.env.CANISTER_ID_CROSS_NFT_LAUNCHER_BACKEND;\n\nexport const createActor = (canisterId, options = {}) => {\n  const agent = options.agent || new HttpAgent({ ...options.agentOptions });\n\n  if (options.agent && options.agentOptions) {\n    console.warn(\n      \"Detected both agent and agentOptions passed to createActor. Ignoring agentOptions and proceeding with the provided agent.\"\n    );\n  }\n\n  // Fetch root key for certificate validation during development\n  if (process.env.DFX_NETWORK !== \"ic\") {\n    agent.fetchRootKey().catch((err) => {\n      console.warn(\n        \"Unable to fetch root key. Check to ensure that your local replica is running\"\n      );\n      console.error(err);\n    });\n  }\n\n  // Creates an actor with using the candid interface and the HttpAgent\n  return Actor.createActor(idlFactory, {\n    agent,\n    canisterId,\n    ...options.actorOptions,\n  });\n};\n\nexport const cross_nft_launcher_backend = canisterId ? createActor(canisterId) : undefined;\n"],"names":["idlFactory","_ref","IDL","Value","Rec","Vec","Account","Record","Principal","Opt","Nat8","Result","Nat","Nat64","Text","Nat16","Nat32","Variant","ApprovalArgs","ApprovalError","Null","Result_1","ApprovalInfo","ApproveCollectionArg","ApproveCollectionError","Result_2","ApproveTokenArg","ApproveTokenError","Result_3","TokenApproval","RevokeCollectionApprovalArg","RevokeCollectionApprovalError","Result_4","RevokeTokenApprovalArg","RevokeTokenApprovalError","Result_5","TransferFromArgs","TransferError","Result_6","TransferFromArg","TransactionType","Transaction","fill","Tuple","Int","MetadataValue","MintArgs","Result_7","TransferArgs","Result_8","Service","Func","Bool","canisterId","process","CANISTER_ID_CROSS_NFT_LAUNCHER_BACKEND","createActor","options","arguments","length","undefined","agent","HttpAgent","agentOptions","console","warn","DFX_NETWORK","fetchRootKey","catch","err","error","Actor","actorOptions","cross_nft_launcher_backend"],"sourceRoot":""}